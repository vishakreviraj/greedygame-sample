{"version":3,"sources":["components/table.jsx","components/date.jsx","components/chart.jsx","App.js","index.js"],"names":["desc","a","b","orderBy","rows","id","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","_this","props","onRequestSort","_this2","this","_this$props","order","react_default","createElement","TableHead_default","TableRow_default","map","row","TableCell_default","key","align","padding","sortDirection","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","active","direction","onClick","React","Component","EnhancedTableToolbar","numSelected","classes","Toolbar_default","className","classNames","root","Object","defineProperty","highlight","Typography_default","color","variant","spacer","actions","withStyles","theme","paddingRight","spacing","unit","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","EnhancedTable","state","selected","page","rowsPerPage","handleRequestSort","_this3","setState","handleSelectAllClick","target","checked","data","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","isSelected","_this4","_this$props2","_this$state","emptyRows","Math","min","Paper_default","table_EnhancedTableToolbar","tableWrapper","Table_default","table","aria-labelledby","table_EnhancedTableHead","rowCount","TableBody_default","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","hover","role","aria-checked","tabIndex","component","scope","time","game","revenue","impressions","ecpm","style","height","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","width","marginTop","minWidth","overflowX","DaterangePicker","handleStartDateChange","date","onChange","handleEndDateChange","material_ui_pickers_esm","utils","DateFnsUtils","Grid_default","container","grid","justify","keyboard","clearable","disableFuture","autoOk","margin","maxDate","endDate","startDate","format","minDate","LineChart","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","anchorEl","cd","s","Date","e","canvas","getContext","datasets","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","borderWidth","options","maintainAspectRatio","legend","display","tooltips","bodySpacing","mode","intersect","position","xPadding","yPadding","caretPadding","responsive","scales","yAxes","ticks","beginAtZero","xAxes","distribution","bounds","source","layout","left","right","top","bottom","currentTarget","handleMenuItemClick","games","filter","obj","md","i","x","timestamp","y","handleClose","bind","assertThisInitialized","Card_default","CardHeader_default","action","Button_default","aria-owns","undefined","aria-haspopup","Menu_default","open","Boolean","onClose","option","MenuItem_default","disabled","chartData","es","max-height","App","tableData","uniqueGames","isLoading","field","fetch","then","response","json","k","counter","push","g","toConsumableArray","Set","item","catch","error","chart_LineChart","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e1f8efd6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n// import DeleteIcon from \"@material-ui/icons/Delete\";\r\n// import FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   counter += 1;\r\n//   return { id: counter, name, calories, fat, carbs, protein };\r\n// }\r\n\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst rows = [\r\n  {\r\n    id: \"time\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Timestamp\"\r\n  },\r\n  { id: \"game\", disablePadding: false, label: \"Game\" },\r\n  { id: \"revenue\", disablePadding: false, label: \"Revenue\" },\r\n  { id: \"impressions\", disablePadding: false, label: \"Impressions\" },\r\n  { id: \"ecpm\", disablePadding: false, label: \"eCPM\" }\r\n];\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      order,\r\n      orderBy,\r\n\r\n    } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {/* <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell> */}\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? \"right\" : \"left\"}\r\n                padding={row.disablePadding ? \"none\" : \"default\"}\r\n                sortDirection={orderBy === row.id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === row.id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  spacer: {\r\n    flex: \"1 1 100%\"\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  title: {\r\n    flex: \"0 0 auto\"\r\n  }\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {/* {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )} */}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  table: {\r\n    minWidth: 1020\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: \"desc\",\r\n    orderBy: \"time\",\r\n    selected: [],\r\n    page: 0,\r\n    rowsPerPage: 5\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n\r\n    const orderBy = property;\r\n    let order = \"desc\";\r\n\r\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\r\n      order = \"asc\";\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  render() {\r\n    const { data, classes } = this.props;\r\n    const {order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows =\r\n      rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n            //   numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n            //   onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                    //   onClick={event => this.handleClick(event, n.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      {/* <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell> */}\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"default\">\r\n                        {n.time}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{n.game}</TableCell>\r\n                      <TableCell align=\"left\">{n.revenue}</TableCell>\r\n                      <TableCell align=\"left\">{n.impressions}</TableCell>\r\n                      <TableCell align=\"left\">{n.ecpm}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            \"aria-label\": \"Previous Page\"\r\n          }}\r\n          nextIconButtonProps={{\r\n            \"aria-label\": \"Next Page\"\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, InlineDatePicker } from 'material-ui-pickers';\r\n\r\nconst styles = {\r\n    grid: {\r\n        width: '100%',\r\n    },\r\n};\r\n\r\nclass DaterangePicker extends React.Component {\r\n\r\n\r\n    handleStartDateChange = date => {\r\n\r\n        this.props.onChange('startDate', date);\r\n\r\n\r\n    };\r\n    handleEndDateChange = date => {\r\n\r\n        this.props.onChange('endDate', date);\r\n\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container className={classes.grid} justify=\"space-around\">\r\n                    <InlineDatePicker\r\n                        keyboard\r\n                        clearable\r\n                        variant=\"outlined\"\r\n                        disableFuture = {true}\r\n                        autoOk = {true}\r\n                        margin=\"normal\"\r\n                        label=\"Start Date\"\r\n                        maxDate = {this.props.endDate}\r\n                        value={this.props.startDate}\r\n                        onChange={this.handleStartDateChange}\r\n                        format={\"dd/MM/yyyy\"}\r\n                    />\r\n                    <InlineDatePicker\r\n                        keyboard\r\n                        clearable\r\n                        variant=\"outlined\"\r\n                        disableFuture = {true}\r\n                        autoOk = {true}\r\n                        margin=\"normal\"\r\n                        label=\"End Date\"\r\n                        minDate = {this.props.startDate}\r\n                        value={this.props.endDate}\r\n                        onChange={this.handleEndDateChange}\r\n                        format={\"dd/MM/yyyy\"}\r\n                    />\r\n\r\n\r\n                </Grid>\r\n            </MuiPickersUtilsProvider>\r\n        );\r\n    }\r\n}\r\n\r\nDaterangePicker.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DaterangePicker);","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nexport default class LineChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleMenuItemClick = this.handleMenuItemClick.bind(this);\r\n    }\r\n    state = {\r\n        anchorEl: null,\r\n        selectedIndex: 0,\r\n        cd : [],\r\n        s : new Date(),\r\n        e : new Date(),\r\n\r\n        data : (canvas) => {\r\n            var ctx = canvas.getContext(\"2d\");\r\n        \r\n        \r\n            return {\r\n                datasets: [{\r\n                    label: \"eCPM\",\r\n                    pointBorderColor: \"#000\",\r\n                    pointBackgroundColor: \"#000\",\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 4,\r\n                    pointHoverBorderWidth: 1,\r\n                    pointRadius: 1,\r\n                    fill: true,\r\n                    borderWidth: 2,\r\n                    data : this.state.cd\r\n                }]\r\n            }\r\n        } ,\r\n        options : {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false\r\n            },\r\n            tooltips: {\r\n                bodySpacing: 4,\r\n                mode: \"nearest\",\r\n                intersect: 0,\r\n                position: \"nearest\",\r\n                xPadding: 10,\r\n                yPadding: 10,\r\n                caretPadding: 10\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                yAxes: [{\r\n                    display: 1,\r\n                    ticks: {\r\n                        display: true,\r\n                        beginAtZero: true\r\n\r\n                    },\r\n        \r\n                }],\r\n                xAxes: [{\r\n                    type: 'time',\r\n                    time: {\r\n                        unit: 'day'\r\n                    },\r\n                    // time : {\r\n                    //     min : this.props.startDate,\r\n                    //     max : this.props.endDate,\r\n                    // },\r\n                    distribution: 'linear',\r\n                    bounds: 'data',\r\n\r\n\r\n                    display: 1,\r\n                    ticks: {\r\n\r\n                        display: true,\r\n                        source: 'auto'\r\n        \r\n                    },\r\n\r\n        \r\n                }]\r\n\r\n            },\r\n            layout: {\r\n                padding: { left: 0, right: 8, top: 16, bottom: 8 }\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuItemClick = (event, index,data,games) => {\r\n        this.setState({ selectedIndex: index, anchorEl: null });\r\n\r\n        let a = data.filter(obj => obj.game === games[index])\r\n        let md = []\r\n        let i = 0\r\n        a.map(obj => {\r\n\r\n            md[i] = { x: new Date(obj.timestamp  + \" 00:00:00.0\") , y: obj.ecpm }\r\n            i = i + 1\r\n        })\r\n        this.setState({\r\n            cd: md,\r\n        })\r\n\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl,selectedIndex } = this.state;\r\n        const { games} = this.props;\r\n\r\n        return (\r\n            <Card  >\r\n                <CardHeader\r\n                    title=\"eCPM Trendline\"\r\n                    action={\r\n                        <div>\r\n                            \r\n                              <Button\r\n                                                        aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                                                        aria-haspopup=\"true\"\r\n                                                        onClick={this.handleClick}\r\n                                                    >\r\n                                                        {games[this.state.selectedIndex] }\r\n                            </Button> \r\n\r\n\r\n                            <Menu\r\n                                id=\"lock-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={this.handleClose}\r\n                            >\r\n                                {games.map((option, index) => (\r\n                                    <MenuItem\r\n                                        key={option}\r\n                                        disabled={index === 0}\r\n                                        selected={index === selectedIndex}\r\n                                        onClick={event => this.handleMenuItemClick(event, index,this.props.chartData, this.props.games)}\r\n                                    >\r\n                                        {option}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                        </div>\r\n                    }\r\n                />\r\n                <Line  data={this.state.data} options={this.state.options} max-height={300}  />\r\n            </Card>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport EnhancedTable from './components/table'\n\nimport DaterangePicker from './components/date'\nimport LineChart from './components/chart'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: new Date(),\n      endDate: new Date(),\n      data : [],\n      tableData : [],\n      uniqueGames: ['Select Game'],\n      chartData : [],\n      isLoading : true,\n    };\n\n  }\n\n  onChange(field, value) {\n    this.setState({[field]: value});\n}\n\n\ncomponentDidUpdate(){\n  fetch(`http://www.mocky.io/v2/5cd04a20320000442200fc10`)\n    .then(response => response.json())\n    .then(data => {\n      let k=[]\n      let counter = 0\n      let a = []\n\n      data.map(field => {\n\n        if ( new Date(field.timestamp + \" 00:00:00.0\") >= this.state.startDate && new Date(field.timestamp + \" 00:00:00.0\") <= this.state.endDate){\n          let ecpm = field.revenue/field.impressions *1000\n\n          a.push(field)\n          a[counter][\"ecpm\"] = ecpm\n\n          k[counter] = {id : counter+1, time: field.timestamp, game : field.game, revenue : field.revenue, impressions : field.impressions, \"ecpm\" : ecpm}\n          counter = counter + 1\n        }\n      }\n    )\n    let games = [\"Select Game\"]\n    let g =  games.concat([...new Set(a.map(item => item.game))])\n    this.setState({\n      uniqueGames : g,\n      tableData : k,\n      data : a\n    })\n\n  }\n    )\n    .catch(error => this.setState({ error }));\n\n}\n\n\n\n\n\nrender() {\n  return (\n    <div className=\"App\">\n      <DaterangePicker \n      startDate = {this.state.startDate}\n      endDate = {this.state.endDate}\n      onChange = {this.onChange.bind(this)}\n      />\n\n      <LineChart\n      games = {this.state.uniqueGames}\n      chartData = {this.state.data}\n      />\n\n\n      <EnhancedTable\n      data = {this.state.tableData}\n       />\n\n\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}